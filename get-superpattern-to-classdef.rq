prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix dct: <http://purl.org/dc/terms/>
prefix np: <http://www.nanopub.org/nschema#>
prefix npx: <http://purl.org/nanopub/x/>
prefix npa: <http://purl.org/nanopub/admin/>
prefix vp: <http://purl.org/nanopub/admin/hasValidSignatureForPublicKey>
prefix frbr: <http://purl.org/vocab/frbr/core#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

prefix lf: <https://w3id.org/linkflows/reviews/>

select distinct ?node1 ?rel ?node2 where {

  graph npa:graph { ?submission_np npa:hasValidSignatureForPublicKey ?pubkey . }
    ?submission_np np:hasAssertion ?submission_np_a ; np:hasPublicationInfo ?submission_np_i .  # TODO: move into npa:graph
  graph ?submission_np_a {
    ?submitted_np frbr:partOf <https://w3id.org/linkflows/formalization-papers/DataScienceSpecialIssue> .
    bind(replace(str(?submitted_np), '^.*(RA[a-zA-Z0-9-_]{8})[a-zA-Z0-9-_]{35}$', '$1') as ?submitted_npLabel)
  }
  graph ?submission_np_i {
    ?submission_np dct:creator ?__author_iri .
    bind(?__author_iri as ?author)
  }
  filter not exists {
    graph npa:graph { ?newversion npa:hasValidSignatureForPublicKey ?pubkey . } ?newversion np:hasPublicationInfo ?si .  # TODO: move into npa:graph
    graph ?si { ?newversion npx:supersedes ?submission_np . }
  }
  filter not exists {
    graph npa:graph { ?retraction npa:hasValidSignatureForPublicKey ?pubkey . } ?retraction np:hasAssertion ?sra .  # TODO: move into npa:graph
    graph ?sra { ?somebody npx:retracts ?submission_np . }
  }

  optional { ?__author_iri foaf:name ?authorLabel . }

    ?submitted_np np:hasAssertion ?submitted_np_a .  # TODO: move into npa:graph
  graph ?submitted_np_a {
    ?spi ?spi_pred ?class .
  }

  graph npa:graph { ?class_np npa:hasValidSignatureForPublicKey ?pubkey . }
    ?class_np np:hasAssertion ?class_np_a ; np:hasPublicationInfo ?class_np_i .  # TODO: move into npa:graph
  bind(replace(str(?class_np), '^.*(RA[a-zA-Z0-9-_]{8})[a-zA-Z0-9-_]{35}$', '$1') as ?class_npLabel)
  graph ?class_np_a {
    ?class rdfs:label ?class_name .
  }
  graph ?class_np_i {
    ?class_np npx:introduces ?class .
  }

  bind(?submitted_npLabel as ?node1)
  bind("->" as ?rel)
  bind(?class_npLabel as ?node2)

}
